name: Test and deploy
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        java: ["11.0.7"]
      fail-fast: false # To not cancel other platforms when one fails
    name: Deploy JDK ${{ matrix.java }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
          architecture: "x64"
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64

      # Install Pipenv
      - if: matrix.os == 'windows-latest'
        name: Install Pipenv [Windows]
        run: pip install pipenv
      - if: matrix.os != 'windows-latest'
        name: Install Pipenv [Ubuntu/macOS]
        run: pip3 install pipenv

      - name: Install Python dependencies
        run: pipenv install --dev --python 3.8 -v

      - name: Set Java version
        run: pipenv run python scripts/set_version.py ${{ matrix.java }}

      - if: matrix.os == 'ubuntu-latest'
        name: Build source wheel
        run: pipenv run python setup.py sdist

      - name: Build JDK
        run: pipenv run python scripts/build_jdk.py

      - name: Build wheel
        env:
          PLATFORM: ${{ matrix.os }}
        run: pipenv run python setup.py bdist_wheel

      # Deploy to PyPI
      - if: matrix.os == 'windows-latest'
        name: Deploy to PyPI [Windows]
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: pipenv run twine upload dist/* --username __token__ --password ${env:TWINE_PASSWORD}
      - if: matrix.os != 'windows-latest'
        name: Deploy to PyPI [Ubuntu/macOS]
        env:
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: pipenv run twine upload dist/* --username __token__ --password $TWINE_PASSWORD
