name: Deploy Conda and PyPI packages
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ${{ matrix.runner }}
    environment: deployment
    strategy:
      matrix:
        runner:
          - macos-13 # x64
          - macos-14 # arm64
          - ubuntu-24.04
          - ubuntu-24.04-arm64 # GitHub-hosted larger runner in the ActiveViam organization.
          - windows-2022
    name: Deploy on ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/build-java-runtime
        with:
          python-version: "3.12"

      - id: build-python-wheel
        uses: ./.github/actions/build-python-wheel

      - id: build-conda-packages
        uses: ./.github/actions/build-conda-packages

      - name: Upload Conda packages
        env:
          JDK4PY_CONDA_CHANNEL_TOKEN: ${{ secrets.CONDA_CHANNEL_TOKEN }}
          JDK4PY_CONDA_CHANNEL_URL: ${{ vars.CONDA_CHANNEL_URL }}
          JDK4PY_CONDA_CHANNEL_USERNAME: ${{ vars.CONDA_CHANNEL_USERNAME }}
          JDK4PY_CONDA_PLATFORM: ${{ steps.build-conda-packages.outputs.platform }}
        run: |
          ls dist/$JDK4PY_CONDA_PLATFORM/jdk4py-*.tar.bz2 | \
          while read filepath; do
            echo Uploading ${filepath}
            curl --fail --user "$JDK4PY_CONDA_CHANNEL_USERNAME":"$JDK4PY_CONDA_CHANNEL_TOKEN" --upload-file ${filepath} "$JDK4PY_CONDA_CHANNEL_URL/$JDK4PY_CONDA_PLATFORM/"
          done
        shell: bash

      - name: Upload Python wheel
        env:
          JDK4PY_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          JDK4PY_WHEEL_FILENAME: ${{ steps.build-python-wheel.outputs.filename }}
        run: uv run twine upload dist/"$JDK4PY_WHEEL_FILENAME" --username __token__ --password "$JDK4PY_PYPI_TOKEN"
        shell: bash
