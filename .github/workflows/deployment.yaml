name: Deploy Conda and PyPI packages
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    environment: deployment
    strategy:
      matrix:
        architecture:
          - x64
        os:
          - macos-latest-large
          - ubuntu-latest
          - windows-latest
        include:
          - architecture: arm64
            os: macos-latest-xlarge
    name: Deploy on ${{ matrix.os }}-${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/build-jdk
        with:
          os: ${{ matrix.os }}
          python-version: "3.12"

      - uses: ./.github/actions/create-python-wheel
        with:
          build-number: ${{ env.JDK4PY_BUILD_NUMBER }}

      - uses: ./.github/actions/create-conda-package
        with:
          architecture: ${{ matrix.architecture }}

      - name: Upload Python wheel
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: poetry run twine upload dist/jdk4py-*.whl --username __token__ --password "$PYPI_TOKEN"
        shell: bash

      - name: Upload Conda package
        env:
          JDK4PY_CONDA_CHANNEL_PASSWORD: ${{ secrets.CONDA_CHANNEL_PASSWORD }}
          JDK4PY_CONDA_CHANNEL_URL: ${{ secrets.CONDA_CHANNEL_URL }}
          JDK4PY_CONDA_CHANNEL_USERNAME: ${{ secrets.CONDA_CHANNEL_USERNAME }}
        run: |
          ls dist/$JDK4PY_CONDA_PLATFORM/jdk4py-*.tar.bz2 | \
          while read filepath; do
            echo Uploading ${filepath}
            curl --fail --user "$JDK4PY_CONDA_CHANNEL_USERNAME":"$JDK4PY_CONDA_CHANNEL_PASSWORD" --upload-file ${filepath} "$JDK4PY_CONDA_CHANNEL_URL/$JDK4PY_CONDA_PLATFORM/"
          done
        shell: bash
